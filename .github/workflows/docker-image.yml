# https://docs.docker.com/build/ci/github-actions/
name: Docker Image CI

on:
  push:
    branches:
    - "master"
    - "dev"
    - "*-framework"
    tags:
    - "v*.*.*"
  pull_request:
    branches:
    - "master"

jobs:
  build:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: rigon/photo-gallery
        # generate Docker tags based on the following events/attributes
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Modify version for non-releases
      if: ${{ github.ref_type != 'tag' }}
      run: |
        echo "Adding to version: ${{ steps.meta.outputs.version }}"
        sed -i 's/"version": "\(.*\)"/"version": "\1-${{ steps.meta.outputs.version }}"/' package.json
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        platforms: linux/amd64,linux/arm64,linux/arm/v6
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  demo:
    name: Demo docker image
    needs: build
    runs-on: ubuntu-latest
    # Run only when dev is updated
    if: github.ref == 'refs/heads/dev'

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: 18
    - name: Obtain demo gallery
      env:
        PIXABAY_API_KEY: ${{ secrets.PIXABAY_API_KEY }}
      run: node demo-download.js
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: rigon/photo-gallery
        tags: |
          type=raw,value=demo
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: Dockerfile.demo
        push: true
        platforms: linux/amd64,linux/arm64,linux/arm/v6
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
